/*
 * This file is generated by jOOQ.
 */
package com.demo.codegen;


import com.demo.codegen.tables.Account;
import com.demo.codegen.tables.FtpServer;
import com.demo.codegen.tables.FtpServerAccount;
import com.demo.codegen.tables.Station;
import com.demo.codegen.tables.Task;
import com.demo.codegen.tables.records.AccountRecord;
import com.demo.codegen.tables.records.FtpServerAccountRecord;
import com.demo.codegen.tables.records.FtpServerRecord;
import com.demo.codegen.tables.records.StationRecord;
import com.demo.codegen.tables.records.TaskRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PK = UniqueKeys0.ACCOUNT_PK;
    public static final UniqueKey<AccountRecord> ACCOUNT_UN = UniqueKeys0.ACCOUNT_UN;
    public static final UniqueKey<FtpServerRecord> FTP_SERVER_PK = UniqueKeys0.FTP_SERVER_PK;
    public static final UniqueKey<TaskRecord> TASK_PK = UniqueKeys0.TASK_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FtpServerAccountRecord, AccountRecord> FTP_SERVER_ACCOUNT__FTP_SERVER_ACCOUNT_FK_1 = ForeignKeys0.FTP_SERVER_ACCOUNT__FTP_SERVER_ACCOUNT_FK_1;
    public static final ForeignKey<FtpServerAccountRecord, FtpServerRecord> FTP_SERVER_ACCOUNT__FTP_SERVER_ACCOUNT_FK = ForeignKeys0.FTP_SERVER_ACCOUNT__FTP_SERVER_ACCOUNT_FK;
    public static final ForeignKey<StationRecord, FtpServerRecord> STATION__STATION_FK = ForeignKeys0.STATION__STATION_FK;
    public static final ForeignKey<TaskRecord, FtpServerRecord> TASK__TASK_ORIGIN_FTP_SERVER_FK = ForeignKeys0.TASK__TASK_ORIGIN_FTP_SERVER_FK;
    public static final ForeignKey<TaskRecord, FtpServerRecord> TASK__TASK_DEST_FTP_SERVER_FK = ForeignKeys0.TASK__TASK_DEST_FTP_SERVER_FK;
    public static final ForeignKey<TaskRecord, AccountRecord> TASK__TASK_ACCOUNT_FK = ForeignKeys0.TASK__TASK_ACCOUNT_FK;
    public static final ForeignKey<TaskRecord, AccountRecord> TASK__TASK_DEST_ACCOUNT_FK = ForeignKeys0.TASK__TASK_DEST_ACCOUNT_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> ACCOUNT_PK = Internal.createUniqueKey(Account.ACCOUNT, "account_pk", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountRecord> ACCOUNT_UN = Internal.createUniqueKey(Account.ACCOUNT, "account_un", Account.ACCOUNT.NAME);
        public static final UniqueKey<FtpServerRecord> FTP_SERVER_PK = Internal.createUniqueKey(FtpServer.FTP_SERVER, "ftp_server_pk", FtpServer.FTP_SERVER.ID);
        public static final UniqueKey<TaskRecord> TASK_PK = Internal.createUniqueKey(Task.TASK, "task_pk", Task.TASK.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<FtpServerAccountRecord, AccountRecord> FTP_SERVER_ACCOUNT__FTP_SERVER_ACCOUNT_FK_1 = Internal.createForeignKey(com.demo.codegen.Keys.ACCOUNT_PK, FtpServerAccount.FTP_SERVER_ACCOUNT, "ftp_server_account__ftp_server_account_fk_1", FtpServerAccount.FTP_SERVER_ACCOUNT.ACCOUNT_ID);
        public static final ForeignKey<FtpServerAccountRecord, FtpServerRecord> FTP_SERVER_ACCOUNT__FTP_SERVER_ACCOUNT_FK = Internal.createForeignKey(com.demo.codegen.Keys.FTP_SERVER_PK, FtpServerAccount.FTP_SERVER_ACCOUNT, "ftp_server_account__ftp_server_account_fk", FtpServerAccount.FTP_SERVER_ACCOUNT.FTP_SERVER_ID);
        public static final ForeignKey<StationRecord, FtpServerRecord> STATION__STATION_FK = Internal.createForeignKey(com.demo.codegen.Keys.FTP_SERVER_PK, Station.STATION, "station__station_fk", Station.STATION.FTP_SERVER_ID);
        public static final ForeignKey<TaskRecord, FtpServerRecord> TASK__TASK_ORIGIN_FTP_SERVER_FK = Internal.createForeignKey(com.demo.codegen.Keys.FTP_SERVER_PK, Task.TASK, "task__task_origin_ftp_server_fk", Task.TASK.ORIGIN_FTP_SERVER_ID);
        public static final ForeignKey<TaskRecord, FtpServerRecord> TASK__TASK_DEST_FTP_SERVER_FK = Internal.createForeignKey(com.demo.codegen.Keys.FTP_SERVER_PK, Task.TASK, "task__task_dest_ftp_server_fk", Task.TASK.DEST_FTP_SERVER_ID);
        public static final ForeignKey<TaskRecord, AccountRecord> TASK__TASK_ACCOUNT_FK = Internal.createForeignKey(com.demo.codegen.Keys.ACCOUNT_PK, Task.TASK, "task__task_account_fk", Task.TASK.CREATE_ACCOUNT_ID);
        public static final ForeignKey<TaskRecord, AccountRecord> TASK__TASK_DEST_ACCOUNT_FK = Internal.createForeignKey(com.demo.codegen.Keys.ACCOUNT_PK, Task.TASK, "task__task_dest_account_fk", Task.TASK.DEST_ACCOUNT_ID);
    }
}
