/*
 * This file is generated by jOOQ.
 */
package com.demo.codegen;


import com.demo.codegen.tables.Account;
import com.demo.codegen.tables.FtpServer;
import com.demo.codegen.tables.Task;

import javax.annotation.processing.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ACCOUNT_PK = Indexes0.ACCOUNT_PK;
    public static final Index ACCOUNT_UN = Indexes0.ACCOUNT_UN;
    public static final Index FTP_SERVER_PK = Indexes0.FTP_SERVER_PK;
    public static final Index TASK_PK = Indexes0.TASK_PK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ACCOUNT_PK = Internal.createIndex("account_pk", Account.ACCOUNT, new OrderField[] { Account.ACCOUNT.ID }, true);
        public static Index ACCOUNT_UN = Internal.createIndex("account_un", Account.ACCOUNT, new OrderField[] { Account.ACCOUNT.NAME }, true);
        public static Index FTP_SERVER_PK = Internal.createIndex("ftp_server_pk", FtpServer.FTP_SERVER, new OrderField[] { FtpServer.FTP_SERVER.ID }, true);
        public static Index TASK_PK = Internal.createIndex("task_pk", Task.TASK, new OrderField[] { Task.TASK.ID }, true);
    }
}
