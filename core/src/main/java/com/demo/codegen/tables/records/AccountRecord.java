/*
 * This file is generated by jOOQ.
 */
package com.demo.codegen.tables.records;


import com.demo.codegen.tables.Account;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record7<String, String, String, String, Timestamp, String, String> {

    private static final long serialVersionUID = -637885302;

    /**
     * Setter for <code>public.account.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.account.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.account.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.account.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.account.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.account.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.account.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.account.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.account.create_time</code>.
     */
    public void setCreateTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.account.create_time</code>.
     */
    public Timestamp getCreateTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>public.account.webhook_endpoint</code>.
     */
    public void setWebhookEndpoint(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.account.webhook_endpoint</code>.
     */
    public String getWebhookEndpoint() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.account.status</code>.
     */
    public void setStatus(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.account.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, Timestamp, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, Timestamp, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Account.ACCOUNT.ID;
    }

    @Override
    public Field<String> field2() {
        return Account.ACCOUNT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Account.ACCOUNT.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return Account.ACCOUNT.EMAIL;
    }

    @Override
    public Field<Timestamp> field5() {
        return Account.ACCOUNT.CREATE_TIME;
    }

    @Override
    public Field<String> field6() {
        return Account.ACCOUNT.WEBHOOK_ENDPOINT;
    }

    @Override
    public Field<String> field7() {
        return Account.ACCOUNT.STATUS;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Timestamp component5() {
        return getCreateTime();
    }

    @Override
    public String component6() {
        return getWebhookEndpoint();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public Timestamp value5() {
        return getCreateTime();
    }

    @Override
    public String value6() {
        return getWebhookEndpoint();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public AccountRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AccountRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AccountRecord value5(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AccountRecord value6(String value) {
        setWebhookEndpoint(value);
        return this;
    }

    @Override
    public AccountRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public AccountRecord values(String value1, String value2, String value3, String value4, Timestamp value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(String id, String name, String password, String email, Timestamp createTime, String webhookEndpoint, String status) {
        super(Account.ACCOUNT);

        set(0, id);
        set(1, name);
        set(2, password);
        set(3, email);
        set(4, createTime);
        set(5, webhookEndpoint);
        set(6, status);
    }
}
